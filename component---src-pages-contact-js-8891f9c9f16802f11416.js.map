{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/seo.js","webpack:///./src/components/map.js"],"names":["ContactPage","render","siteMetadata","this","props","data","site","siteTitle","title","manufacturers","allContentfulManufacturer","edges","className","pagePath","postNode","description","internal","content","pageSEO","API_KEY","mapKey","PLACE_ID","placeId","section","recaptchaKey","React","Component","SEO","image","imgWidth","imgHeight","pageUrl","postSEO","articleSEO","customTitle","products","location","siteImage","siteUrl","shareImage","dateModified","Date","keywords","concat","tags","shareImageWidth","shareImageHeight","split","length","getSrc","heroImage","gatsbyImageData","width","height","publishDate","schemaOrgJSONLD","url","name","alternateName","potentialAction","target","legalName","logo","foundingDate","address","streetAddress","addressLocality","addressRegion","postalCode","addressCountry","contactPoint","contactType","email","sameAs","telephone","priceRange","openingHours","geo","latitude","longitude","push","itemListElement","position","item","mainEntityOfPage","headline","datePublished","author","publisher","childMarkdownRemark","html","forEach","edge","product","node","productImage","file","sku","contentful_id","mpn","review","reviewRating","ratingValue","bestRating","aggregateRating","reviewCount","brand","fixed","src","offers","price","priceCurrency","priceValidUntil","availability","join","type","JSON","stringify","async","property","userTwitter","GoogleMap","state","LOOPARCH_MAPS_KEY","defer","id","css","display"],"mappings":"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","file":"component---src-pages-contact-js-8891f9c9f16802f11416.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport { Helmet } from 'react-helmet'\nimport { graphql } from 'gatsby'\n\nimport GoogleMap from '../components/map'\nimport FormContact from '../components/form-contact'\nimport SEO from '../components/seo'\n\nclass ContactPage extends React.Component {\n  render() {\n    const siteMetadata = this.props.data.site.siteMetadata\n    const siteTitle = siteMetadata.title\n    const manufacturers = this.props.data.allContentfulManufacturer || {\n      edges: [],\n    }\n    const postNode = {\n      title: 'Contact Us',\n      description: {\n        internal: {\n          content: 'We would love to hear from you.',\n        },\n      },\n    }\n\n    return (\n      <Layout>\n        <div className=\"content-section\">\n          <Helmet title={`${siteTitle} | Contact Us`} />\n          <SEO\n            pagePath={`contact`}\n            postNode={postNode}\n            pageSEO\n            siteMetadata={this.props.data.site.siteMetadata}\n          />\n          <GoogleMap\n            API_KEY={this.props.data.site.siteMetadata.mapKey}\n            PLACE_ID={this.props.data.site.siteMetadata.placeId}\n          />\n          <section className=\"section\">\n            <div className=\"container\">\n              <h1 className=\"title is-size-4\"> Contact Us </h1>\n              <div className=\"columns\">\n                <div className=\"column is-two-thirds\">\n                  <FormContact\n                    section=\"Contact Us\"\n                    manufacturers={manufacturers}\n                    recaptchaKey={siteMetadata.recaptchaKey}\n                  />\n                </div>\n                <div className=\"column\">\n                  <div className=\"content\">\n                    <p>\n                      We’d love to hear from you. If you’re interested in\n                      receiving samples, scheduling a presentation or talking to\n                      us about any of our product lines, feel free to fill out\n                      the form.\n                    </p>\n                    <p>Our showroom address is:</p>\n                    <p>\n                      <strong> Loop Architectural Materials </strong> <br />\n                      3110 N 16 th Street <br />\n                      Phoenix, AZ 85016\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default ContactPage\n\nexport const pageQuery = graphql`\n  query ContactQuery {\n    allContentfulManufacturer(sort: { fields: [title] }) {\n      edges {\n        node {\n          id\n          title\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        description\n        shareImage\n        shareImageWidth\n        shareImageHeight\n        publisher\n        mapKey\n        placeId\n        recaptchaKey\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { getSrc } from 'gatsby-plugin-image'\n\nclass SEO extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const {\n      postNode,\n      pagePath,\n      postSEO,\n      pageSEO,\n      articleSEO,\n      customTitle,\n      siteMetadata,\n      location,\n      products,\n    } = this.props\n    const siteImage = `${siteMetadata.siteUrl}${siteMetadata.shareImage}`\n    let title\n    let description\n    let image\n    let imgWidth\n    let imgHeight\n    let pageUrl\n    let dateModified = new Date()\n    let keywords = [postNode.title].concat(postNode.tags)\n\n    // Set Default OpenGraph Parameters for Fallback\n    title = siteMetadata.title\n    description = siteMetadata.description\n    image = `${siteMetadata.siteUrl}${siteMetadata.shareImage}`\n    imgWidth = siteMetadata.shareImageWidth\n    imgHeight = siteMetadata.shareImageHeight\n    pageUrl = siteMetadata.siteUrl\n\n    if (customTitle) {\n      title = postNode.title\n      pageUrl = siteMetadata.siteUrl + '/' + pagePath + '/'\n    }\n\n    // Replace with Page Parameters if post or page\n    if (postSEO || pageSEO) {\n      title = postNode.title\n      description = postNode.description.internal.content.split('\\n')[0]\n      if (pagePath.length > 1) {\n        pageUrl = siteMetadata.siteUrl + '/' + pagePath + '/'\n      } else {\n        pageUrl = siteMetadata.siteUrl + '/'\n      }\n    }\n    // Use Hero Image for OpenGraph\n    if (postSEO || articleSEO) {\n      image = `https:${getSrc(postNode.heroImage.gatsbyImageData)}`\n      imgWidth = postNode.heroImage.gatsbyImageData.width\n      imgHeight = postNode.heroImage.gatsbyImageData.height\n      dateModified = postNode.publishDate\n      pageUrl = `${siteMetadata.siteUrl}/${pagePath}/`\n    }\n\n    // Default Website Schema\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: siteMetadata.siteUrl,\n        name: siteMetadata.title,\n        alternateName: siteMetadata.title,\n        potentialAction: {\n          '@type': 'SearchAction',\n          target: 'https://looparch.com/search/?s={search_term_string}',\n          'query-input': 'required name=search_term_string',\n        },\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'Organization',\n        name: siteMetadata.title,\n        legalName: `${siteMetadata.title}, LLC`,\n        url: siteMetadata.siteUrl,\n        logo: siteImage,\n        foundingDate: '2009',\n        address: {\n          '@type': 'PostalAddress',\n          streetAddress: '3110 N 16th Street',\n          addressLocality: 'Phoenix',\n          addressRegion: 'AZ',\n          postalCode: '85016',\n          addressCountry: 'USA',\n        },\n        contactPoint: {\n          '@type': 'ContactPoint',\n          contactType: 'sales',\n          email: 'info@looparch.com',\n          url: `${siteMetadata.siteUrl}/contact/`,\n        },\n        sameAs: [\n          'https://www.instagram.com/looparchitecturalmaterials/',\n          'https://www.facebook.com/looparch/',\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'LocalBusiness',\n        address: {\n          '@type': 'PostalAddress',\n          streetAddress: '3110 N 16th Street',\n          addressLocality: 'Phoenix',\n          addressRegion: 'AZ',\n          postalCode: '85016',\n          addressCountry: 'USA',\n        },\n        telephone: '602-810-1502',\n        image: siteImage,\n        priceRange: '$$$',\n        description: `${siteMetadata.description}`,\n        name: siteMetadata.title,\n        openingHours: 'Mo,Tu,We,Th,Fr 09:00-17:00',\n        geo: {\n          '@type': 'GeoCoordinates',\n          latitude: '33.484319',\n          longitude: '-112.047970',\n        },\n        sameAs: [\n          'https://www.instagram.com/looparchitecturalmaterials/',\n          'https://www.facebook.com/looparch/',\n          'https://www.pinterest.com/looparchitecturalmaterials',\n        ],\n      },\n    ]\n\n    // Blog Post Schema\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': siteMetadata.siteUrl,\n                name: siteMetadata.title,\n              },\n            },\n            {\n              '@type': 'ListItem',\n              position: 2,\n              item: {\n                '@id': `${siteMetadata.siteUrl}/${\n                  this.props.pagePath.split('/')[0]\n                }/`,\n                name: `${this.props.pagePath.split('/')[0]}`,\n              },\n            },\n            {\n              '@type': 'ListItem',\n              position: 3,\n              item: {\n                '@id': pageUrl,\n                name: title,\n              },\n            },\n          ],\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'NewsArticle',\n          mainEntityOfPage: {\n            '@type': 'WebPage',\n            url: pageUrl,\n          },\n          headline: title,\n          image: [image],\n          datePublished: postNode.publishDate,\n          dateModified: dateModified,\n          author: {\n            '@type': 'Person',\n            name: siteMetadata.publisher,\n            url: siteMetadata.siteUrl,\n          },\n          publisher: {\n            '@type': 'Organization',\n            name: siteMetadata.publisher,\n            url: siteMetadata.siteUrl,\n            logo: {\n              '@type': 'ImageObject',\n              name: 'Loop Architectural Materials Logo',\n              width: `600`,\n              height: `60`,\n              url: `${siteMetadata.siteUrl}${siteMetadata.shareImage}`,\n            },\n          },\n          description: postNode.description.childMarkdownRemark.html,\n        }\n      )\n    }\n\n    // Page SEO Schema\n    if (pageSEO) {\n      schemaOrgJSONLD.push({\n        '@context': 'http://schema.org',\n        '@type': 'WebPage',\n        url: pageUrl,\n        name: title,\n        description: description,\n      })\n    }\n\n    if (products) {\n      products.forEach((edge) => {\n        const product = edge.node\n        schemaOrgJSONLD.push({\n          '@context': 'http://schema.org',\n          '@type': 'Product',\n          name: product.title,\n          image: [`https:${product.productImage.file.url}`],\n          description: `${\n            product.description\n              ? product.description.childMarkdownRemark.html\n              : ''\n          } - Inquire for pricing`,\n          sku: `${product.contentful_id}`,\n          mpn: `${product.contentful_id}`,\n          review: {\n            '@type': 'Review',\n            reviewRating: {\n              '@type': 'Rating',\n              ratingValue: '5',\n              bestRating: '5',\n            },\n            author: {\n              '@type': 'Person',\n              name: siteMetadata.publisher,\n              url: siteMetadata.siteUrl,\n            },\n          },\n          aggregateRating: {\n            '@type': 'AggregateRating',\n            ratingValue: '5',\n            reviewCount: '1',\n          },\n          brand: {\n            '@type': 'Brand',\n            name: postNode.title,\n            logo: `https:${postNode.heroImage.fixed.src}`,\n          },\n          offers: {\n            '@type': 'Offer',\n            price: '0.00',\n            priceCurrency: 'USD',\n            priceValidUntil: '2020-01-01',\n            availability: 'InStock',\n            url: `${pageUrl}`,\n          },\n        })\n      })\n    }\n\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"keywords\" content={keywords.join(',')} />\n        <meta name=\"image\" content={image} />\n        <meta name=\"description\" content={description} />\n        <meta name=\"application-name\" content=\"Loop Architectural Materials\" />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        <script\n          async\n          src=\"https://chimpstatic.com/mcjs-connected/js/users/6236ae131b11b8506326eed86/943d564cd0b36996e264a468a.js\"\n        ></script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:title\" content={title} />\n        {postSEO ? (\n          <meta property=\"og:type\" content=\"article\" />\n        ) : (\n          <meta property=\"og:type\" content=\"article\" />\n        )}\n        <meta\n          property=\"article:author\"\n          content=\"Loop Architectural Materials\"\n        />\n        <meta\n          property=\"article:published_time\"\n          content={postNode.publishDate}\n        />\n        <meta property=\"og:url\" content={pageUrl} />\n        <meta property=\"og:image\" content={image} />\n        <meta property=\"og:image:width\" content={imgWidth} />\n        <meta property=\"og:image:height\" content={imgHeight} />\n        <meta property=\"og:description\" content={description} />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={siteMetadata.userTwitter ? siteMetadata.userTwitter : ''}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:image\" content={image} />\n        <meta name=\"twitter:description\" content={description} />\n      </Helmet>\n    )\n  }\n}\n\nexport default SEO\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nclass GoogleMap extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  render() {\n    const LOOPARCH_MAPS_KEY = this.props.API_KEY\n\n    return (\n      <section className=\"\">\n        <Helmet>\n          <script type=\"text/javascript\">\n            {`\n            const looparch = {lat: 33.484319, lng: -112.047970};\n            const looparchPlaceID = 'ChIJu8uonngSK4cRyrk911TEaok';\n            let map\n            let marker\n            let infowindow\n            let service\n\n            function initMap() {\n              map = new google.maps.Map(document.getElementById('map'), {\n                center: looparch,\n                zoom: 10\n              });\n\n              infowindow = new google.maps.InfoWindow()\n              service = new google.maps.places.PlacesService(map)\n\n              service.getDetails({\n                placeId: looparchPlaceID\n              }, (place, status) => {\n                if (status === google.maps.places.PlacesServiceStatus.OK) {\n                  marker = new google.maps.Marker({\n                    map: map,\n                    position: place.geometry.location,\n                    animation: google.maps.Animation.DROP,\n                  });\n                  google.maps.event.addListener(marker, 'click', function() {\n                    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' +\n                      place.formatted_address + '</div>');\n                    infowindow.open(map, this);\n                  });\n                }\n              })\n            }`}\n          </script>\n          <script\n            src={`https://maps.googleapis.com/maps/api/js?key=${LOOPARCH_MAPS_KEY}&libraries=places&callback=initMap`}\n            async\n            defer\n          />\n        </Helmet>\n        <div className=\"\">\n          <div\n            id=\"map\"\n            css={{\n              display: 'block',\n              height: '20rem',\n            }}\n          />\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default GoogleMap\n"],"sourceRoot":""}