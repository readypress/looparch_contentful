{"version":3,"sources":["webpack:///./src/pages/manufacturers/index.js","webpack:///./src/components/manufacturer-preview.js","webpack:///./src/components/seo.js"],"names":["ManufacturersIndex","render","siteTitle","this","props","data","site","siteMetadata","title","posts","allContentfulManufacturer","edges","className","pagePath","postNode","description","internal","content","pageSEO","map","node","key","slug","article","React","Component","to","hrefLang","image","logoImageDark","gatsbyImageData","alt","tags","tag","SEO","imgWidth","imgHeight","pageUrl","postSEO","articleSEO","customTitle","products","location","siteImage","siteUrl","shareImage","dateModified","Date","keywords","concat","shareImageWidth","shareImageHeight","split","length","getSrc","heroImage","width","height","publishDate","schemaOrgJSONLD","url","name","alternateName","potentialAction","target","legalName","logo","foundingDate","address","streetAddress","addressLocality","addressRegion","postalCode","addressCountry","contactPoint","contactType","email","sameAs","telephone","priceRange","openingHours","geo","latitude","longitude","push","itemListElement","position","item","mainEntityOfPage","headline","datePublished","author","publisher","childMarkdownRemark","html","forEach","edge","product","productImage","file","sku","contentful_id","mpn","review","reviewRating","ratingValue","bestRating","aggregateRating","reviewCount","brand","fixed","src","offers","price","priceCurrency","priceValidUntil","availability","join","type","JSON","stringify","async","property","userTwitter"],"mappings":"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","file":"component---src-pages-manufacturers-index-js-31bbb041062b42e9763b.js","sourcesContent":["import React from 'react'\nimport Layout from '../../components/layout'\nimport { Link } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { graphql } from 'gatsby'\n\nimport ManufacturerPreview from '../../components/manufacturer-preview'\nimport SEO from '../../components/seo'\n\nimport styles from './index.sass'\n\nclass ManufacturersIndex extends React.Component {\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const posts = this.props.data.allContentfulManufacturer.edges\n    const postNode = {\n      title: 'Our Manufacturers',\n      description: {\n        internal: {\n          content:\n            'A current listing of the manufacturers Loop Architectural Materials represents.',\n        },\n      },\n    }\n\n    return (\n      <Layout>\n        <div className=\"content-section\">\n          <Helmet title={`${siteTitle} | Our Manufacturers`} />\n          <SEO\n            pagePath={`manufacturers`}\n            postNode={postNode}\n            pageSEO\n            siteMetadata={this.props.data.site.siteMetadata}\n          />\n          <section className=\"section\">\n            <div className=\"container\">\n              <h1 className=\"title is-size-4\">Our Manufacturers</h1>\n              <div className=\"manufacturer-list columns is-multiline\">\n                {posts.map(({ node }) => {\n                  return <ManufacturerPreview key={node.slug} article={node} />\n                })}\n              </div>\n            </div>\n          </section>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default ManufacturersIndex\n\nexport const pageQuery = graphql`\n  query ManufacturerIndexQuery {\n    allContentfulManufacturer(sort: { fields: [title], order: ASC }) {\n      edges {\n        node {\n          title\n          slug\n          publishDate(formatString: \"MMMM Do, YYYY\")\n          tags\n          logoImageDark {\n            description\n            gatsbyImageData(height: 150, quality: 100)\n          }\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        description\n        shareImage\n        shareImageWidth\n        shareImageHeight\n        publisher\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport styles from './manufacturer-preview.scss'\n\nexport default ({ article }) => (\n  <div className=\"column is-one-third\">\n    <div className=\"box\">\n      <Link to={`/manufacturers/${article.slug}`} hrefLang=\"en\">\n        <div className=\"image-wrapper\">\n          <GatsbyImage\n            image={article.logoImageDark.gatsbyImageData}\n            alt={article.logoImageDark.description}\n          />\n          <div className=\"tags\">\n            {article.tags.map((tag) => {\n              return (\n                <div className=\"tag\" key={tag}>\n                  {tag}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </Link>\n    </div>\n  </div>\n)\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { getSrc } from 'gatsby-plugin-image'\n\nclass SEO extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const {\n      postNode,\n      pagePath,\n      postSEO,\n      pageSEO,\n      articleSEO,\n      customTitle,\n      siteMetadata,\n      location,\n      products,\n    } = this.props\n    const siteImage = `${siteMetadata.siteUrl}${siteMetadata.shareImage}`\n    let title\n    let description\n    let image\n    let imgWidth\n    let imgHeight\n    let pageUrl\n    let dateModified = new Date()\n    let keywords = [postNode.title].concat(postNode.tags)\n\n    // Set Default OpenGraph Parameters for Fallback\n    title = siteMetadata.title\n    description = siteMetadata.description\n    image = `${siteMetadata.siteUrl}${siteMetadata.shareImage}`\n    imgWidth = siteMetadata.shareImageWidth\n    imgHeight = siteMetadata.shareImageHeight\n    pageUrl = siteMetadata.siteUrl\n\n    if (customTitle) {\n      title = postNode.title\n      pageUrl = siteMetadata.siteUrl + '/' + pagePath + '/'\n    }\n\n    // Replace with Page Parameters if post or page\n    if (postSEO || pageSEO) {\n      title = postNode.title\n      description = postNode.description.internal.content.split('\\n')[0]\n      if (pagePath.length > 1) {\n        pageUrl = siteMetadata.siteUrl + '/' + pagePath + '/'\n      } else {\n        pageUrl = siteMetadata.siteUrl + '/'\n      }\n    }\n    // Use Hero Image for OpenGraph\n    if (postSEO || articleSEO) {\n      image = `https:${getSrc(postNode.heroImage.gatsbyImageData)}`\n      imgWidth = postNode.heroImage.gatsbyImageData.width\n      imgHeight = postNode.heroImage.gatsbyImageData.height\n      dateModified = postNode.publishDate\n      pageUrl = `${siteMetadata.siteUrl}/${pagePath}/`\n    }\n\n    // Default Website Schema\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: siteMetadata.siteUrl,\n        name: siteMetadata.title,\n        alternateName: siteMetadata.title,\n        potentialAction: {\n          '@type': 'SearchAction',\n          target: 'https://looparch.com/search/?s={search_term_string}',\n          'query-input': 'required name=search_term_string',\n        },\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'Organization',\n        name: siteMetadata.title,\n        legalName: `${siteMetadata.title}, LLC`,\n        url: siteMetadata.siteUrl,\n        logo: siteImage,\n        foundingDate: '2009',\n        address: {\n          '@type': 'PostalAddress',\n          streetAddress: '3110 N 16th Street',\n          addressLocality: 'Phoenix',\n          addressRegion: 'AZ',\n          postalCode: '85016',\n          addressCountry: 'USA',\n        },\n        contactPoint: {\n          '@type': 'ContactPoint',\n          contactType: 'sales',\n          email: 'info@looparch.com',\n          url: `${siteMetadata.siteUrl}/contact/`,\n        },\n        sameAs: [\n          'https://www.instagram.com/looparchitecturalmaterials/',\n          'https://www.facebook.com/looparch/',\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'LocalBusiness',\n        address: {\n          '@type': 'PostalAddress',\n          streetAddress: '3110 N 16th Street',\n          addressLocality: 'Phoenix',\n          addressRegion: 'AZ',\n          postalCode: '85016',\n          addressCountry: 'USA',\n        },\n        telephone: '602-810-1502',\n        image: siteImage,\n        priceRange: '$$$',\n        description: `${siteMetadata.description}`,\n        name: siteMetadata.title,\n        openingHours: 'Mo,Tu,We,Th,Fr 09:00-17:00',\n        geo: {\n          '@type': 'GeoCoordinates',\n          latitude: '33.484319',\n          longitude: '-112.047970',\n        },\n        sameAs: [\n          'https://www.instagram.com/looparchitecturalmaterials/',\n          'https://www.facebook.com/looparch/',\n          'https://www.pinterest.com/looparchitecturalmaterials',\n        ],\n      },\n    ]\n\n    // Blog Post Schema\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': siteMetadata.siteUrl,\n                name: siteMetadata.title,\n              },\n            },\n            {\n              '@type': 'ListItem',\n              position: 2,\n              item: {\n                '@id': `${siteMetadata.siteUrl}/${\n                  this.props.pagePath.split('/')[0]\n                }/`,\n                name: `${this.props.pagePath.split('/')[0]}`,\n              },\n            },\n            {\n              '@type': 'ListItem',\n              position: 3,\n              item: {\n                '@id': pageUrl,\n                name: title,\n              },\n            },\n          ],\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'NewsArticle',\n          mainEntityOfPage: {\n            '@type': 'WebPage',\n            url: pageUrl,\n          },\n          headline: title,\n          image: [image],\n          datePublished: postNode.publishDate,\n          dateModified: dateModified,\n          author: {\n            '@type': 'Person',\n            name: siteMetadata.publisher,\n            url: siteMetadata.siteUrl,\n          },\n          publisher: {\n            '@type': 'Organization',\n            name: siteMetadata.publisher,\n            url: siteMetadata.siteUrl,\n            logo: {\n              '@type': 'ImageObject',\n              name: 'Loop Architectural Materials Logo',\n              width: `600`,\n              height: `60`,\n              url: `${siteMetadata.siteUrl}${siteMetadata.shareImage}`,\n            },\n          },\n          description: postNode.description.childMarkdownRemark.html,\n        }\n      )\n    }\n\n    // Page SEO Schema\n    if (pageSEO) {\n      schemaOrgJSONLD.push({\n        '@context': 'http://schema.org',\n        '@type': 'WebPage',\n        url: pageUrl,\n        name: title,\n        description: description,\n      })\n    }\n\n    if (products) {\n      products.forEach((edge) => {\n        const product = edge.node\n        schemaOrgJSONLD.push({\n          '@context': 'http://schema.org',\n          '@type': 'Product',\n          name: product.title,\n          image: [`https:${product.productImage.file.url}`],\n          description: `${\n            product.description\n              ? product.description.childMarkdownRemark.html\n              : ''\n          } - Inquire for pricing`,\n          sku: `${product.contentful_id}`,\n          mpn: `${product.contentful_id}`,\n          review: {\n            '@type': 'Review',\n            reviewRating: {\n              '@type': 'Rating',\n              ratingValue: '5',\n              bestRating: '5',\n            },\n            author: {\n              '@type': 'Person',\n              name: siteMetadata.publisher,\n              url: siteMetadata.siteUrl,\n            },\n          },\n          aggregateRating: {\n            '@type': 'AggregateRating',\n            ratingValue: '5',\n            reviewCount: '1',\n          },\n          brand: {\n            '@type': 'Brand',\n            name: postNode.title,\n            logo: `https:${postNode.heroImage.fixed.src}`,\n          },\n          offers: {\n            '@type': 'Offer',\n            price: '0.00',\n            priceCurrency: 'USD',\n            priceValidUntil: '2020-01-01',\n            availability: 'InStock',\n            url: `${pageUrl}`,\n          },\n        })\n      })\n    }\n\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"keywords\" content={keywords.join(',')} />\n        <meta name=\"image\" content={image} />\n        <meta name=\"description\" content={description} />\n        <meta name=\"application-name\" content=\"Loop Architectural Materials\" />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        <script\n          async\n          src=\"https://chimpstatic.com/mcjs-connected/js/users/6236ae131b11b8506326eed86/943d564cd0b36996e264a468a.js\"\n        ></script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:title\" content={title} />\n        {postSEO ? (\n          <meta property=\"og:type\" content=\"article\" />\n        ) : (\n          <meta property=\"og:type\" content=\"article\" />\n        )}\n        <meta\n          property=\"article:author\"\n          content=\"Loop Architectural Materials\"\n        />\n        <meta\n          property=\"article:published_time\"\n          content={postNode.publishDate}\n        />\n        <meta property=\"og:url\" content={pageUrl} />\n        <meta property=\"og:image\" content={image} />\n        <meta property=\"og:image:width\" content={imgWidth} />\n        <meta property=\"og:image:height\" content={imgHeight} />\n        <meta property=\"og:description\" content={description} />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={siteMetadata.userTwitter ? siteMetadata.userTwitter : ''}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:image\" content={image} />\n        <meta name=\"twitter:description\" content={description} />\n      </Helmet>\n    )\n  }\n}\n\nexport default SEO\n"],"sourceRoot":""}