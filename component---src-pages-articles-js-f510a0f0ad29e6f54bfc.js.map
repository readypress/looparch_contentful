{"version":3,"sources":["webpack:///./src/components/article-preview.js","webpack:///./src/pages/articles.js","webpack:///./src/components/seo.js"],"names":["ArticlePreview","props","render","article","this","siteMetadata","className","itemScope","itemType","itemProp","content","siteUrl","slug","title","heroImage","file","url","description","childMarkdownRemark","html","to","hrefLang","style","color","image","gatsbyImageData","alt","body","excerpt","React","Component","ArticleIndex","siteTitle","data","site","posts","allContentfulBlogPost","edges","pagePath","postNode","internal","pageSEO","map","node","key","SEO","imgWidth","imgHeight","pageUrl","postSEO","articleSEO","customTitle","products","location","siteImage","shareImage","dateModified","Date","keywords","concat","tags","shareImageWidth","shareImageHeight","split","length","getSrc","width","height","publishDate","schemaOrgJSONLD","name","alternateName","potentialAction","target","legalName","logo","foundingDate","address","streetAddress","addressLocality","addressRegion","postalCode","addressCountry","contactPoint","contactType","email","sameAs","telephone","priceRange","openingHours","geo","latitude","longitude","push","itemListElement","position","item","mainEntityOfPage","headline","datePublished","author","publisher","forEach","edge","product","productImage","sku","contentful_id","mpn","review","reviewRating","ratingValue","bestRating","aggregateRating","reviewCount","brand","fixed","src","offers","price","priceCurrency","priceValidUntil","availability","join","type","JSON","stringify","async","property","userTwitter"],"mappings":"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","file":"component---src-pages-articles-js-f510a0f0ad29e6f54bfc.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nclass ArticlePreview extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const article = this.props.article\n    const siteMetadata = this.props.siteMetadata\n\n    return (\n      <div\n        className=\"article-preview box\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <meta\n          itemProp=\"url\"\n          content={`${siteMetadata.siteUrl}/articles/${article.slug}/`}\n        />\n        <meta itemProp=\"name\" content={article.title} />\n        <meta itemProp=\"author\" content=\"Loop Architectural Materials\" />\n        <meta itemProp=\"image\" content={article.heroImage.file.url} />\n        <meta\n          itemProp=\"description\"\n          content={article.description.childMarkdownRemark.html}\n        />\n        <Link\n          to={`/articles/${article.slug}`}\n          hrefLang=\"en\"\n          style={{ color: '#363636' }}\n        >\n          <GatsbyImage\n            image={article.heroImage.gatsbyImageData}\n            alt={article.heroImage.title}\n            title={article.heroImage.title}\n          />\n          <hr />\n          <h3 className=\"title is-size-5\">{article.title}</h3>\n          <p className=\"is-size-7\">\n            {article.body.childMarkdownRemark.excerpt}\n          </p>\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default ArticlePreview\n","import React from 'react'\nimport Layout from '../components/layout'\nimport { Helmet } from 'react-helmet'\nimport { graphql } from 'gatsby'\n\nimport ArticlePreview from '../components/article-preview'\nimport SEO from '../components/seo'\n\nclass ArticleIndex extends React.Component {\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const posts = this.props.data.allContentfulBlogPost.edges\n    const postNode = {\n      title: 'Articles',\n      description: {\n        internal: {\n          content:\n            'A list of articles and press releases from Loop Architectural Materials listed in the order they were created.',\n        },\n      },\n    }\n\n    return (\n      <Layout>\n        <div className=\"content-section\">\n          <Helmet title={`${siteTitle} | Articles`} />\n          <SEO\n            pagePath={`articles`}\n            postNode={postNode}\n            pageSEO\n            siteMetadata={this.props.data.site.siteMetadata}\n          />\n          <section className=\"section\">\n            <div className=\"container\">\n              <h1 className=\"title is-size-4\">Articles</h1>\n              <div className=\"article-list columns is-multiline\">\n                {posts.map(({ node }) => {\n                  return (\n                    <div key={node.slug} className=\"column is-one-third\">\n                      <ArticlePreview\n                        article={node}\n                        siteMetadata={this.props.data.site.siteMetadata}\n                      />\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n          </section>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default ArticleIndex\n\nexport const pageQuery = graphql`\n  query BlogIndexQuery {\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\n      edges {\n        node {\n          title\n          slug\n          publishDate\n          readableDate: publishDate(formatString: \"MMMM Do, YYYY\")\n          tags\n          heroImage {\n            title\n            description\n            gatsbyImageData(width: 400, height: 300)\n            file {\n              url\n            }\n          }\n          body {\n            childMarkdownRemark {\n              excerpt\n            }\n          }\n          description {\n            childMarkdownRemark {\n              excerpt\n              html\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        description\n        shareImage\n        shareImageWidth\n        shareImageHeight\n        publisher\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { getSrc } from 'gatsby-plugin-image'\n\nclass SEO extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const {\n      postNode,\n      pagePath,\n      postSEO,\n      pageSEO,\n      articleSEO,\n      customTitle,\n      siteMetadata,\n      location,\n      products,\n    } = this.props\n    const siteImage = `${siteMetadata.siteUrl}${siteMetadata.shareImage}`\n    let title\n    let description\n    let image\n    let imgWidth\n    let imgHeight\n    let pageUrl\n    let dateModified = new Date()\n    let keywords = [postNode.title].concat(postNode.tags)\n\n    // Set Default OpenGraph Parameters for Fallback\n    title = siteMetadata.title\n    description = siteMetadata.description\n    image = `${siteMetadata.siteUrl}${siteMetadata.shareImage}`\n    imgWidth = siteMetadata.shareImageWidth\n    imgHeight = siteMetadata.shareImageHeight\n    pageUrl = siteMetadata.siteUrl\n\n    if (customTitle) {\n      title = postNode.title\n      pageUrl = siteMetadata.siteUrl + '/' + pagePath + '/'\n    }\n\n    // Replace with Page Parameters if post or page\n    if (postSEO || pageSEO) {\n      title = postNode.title\n      description = postNode.description.internal.content.split('\\n')[0]\n      if (pagePath.length > 1) {\n        pageUrl = siteMetadata.siteUrl + '/' + pagePath + '/'\n      } else {\n        pageUrl = siteMetadata.siteUrl + '/'\n      }\n    }\n    // Use Hero Image for OpenGraph\n    if (postSEO || articleSEO) {\n      image = `https:${getSrc(postNode.heroImage.gatsbyImageData)}`\n      imgWidth = postNode.heroImage.gatsbyImageData.width\n      imgHeight = postNode.heroImage.gatsbyImageData.height\n      dateModified = postNode.publishDate\n      pageUrl = `${siteMetadata.siteUrl}/${pagePath}/`\n    }\n\n    // Default Website Schema\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: siteMetadata.siteUrl,\n        name: siteMetadata.title,\n        alternateName: siteMetadata.title,\n        potentialAction: {\n          '@type': 'SearchAction',\n          target: 'https://looparch.com/search/?s={search_term_string}',\n          'query-input': 'required name=search_term_string',\n        },\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'Organization',\n        name: siteMetadata.title,\n        legalName: `${siteMetadata.title}, LLC`,\n        url: siteMetadata.siteUrl,\n        logo: siteImage,\n        foundingDate: '2009',\n        address: {\n          '@type': 'PostalAddress',\n          streetAddress: '3110 N 16th Street',\n          addressLocality: 'Phoenix',\n          addressRegion: 'AZ',\n          postalCode: '85016',\n          addressCountry: 'USA',\n        },\n        contactPoint: {\n          '@type': 'ContactPoint',\n          contactType: 'sales',\n          email: 'info@looparch.com',\n          url: `${siteMetadata.siteUrl}/contact/`,\n        },\n        sameAs: [\n          'https://www.instagram.com/looparchitecturalmaterials/',\n          'https://www.facebook.com/looparch/',\n        ],\n      },\n      {\n        '@context': 'http://schema.org',\n        '@type': 'LocalBusiness',\n        address: {\n          '@type': 'PostalAddress',\n          streetAddress: '3110 N 16th Street',\n          addressLocality: 'Phoenix',\n          addressRegion: 'AZ',\n          postalCode: '85016',\n          addressCountry: 'USA',\n        },\n        telephone: '602-810-1502',\n        image: siteImage,\n        priceRange: '$$$',\n        description: `${siteMetadata.description}`,\n        name: siteMetadata.title,\n        openingHours: 'Mo,Tu,We,Th,Fr 09:00-17:00',\n        geo: {\n          '@type': 'GeoCoordinates',\n          latitude: '33.484319',\n          longitude: '-112.047970',\n        },\n        sameAs: [\n          'https://www.instagram.com/looparchitecturalmaterials/',\n          'https://www.facebook.com/looparch/',\n          'https://www.pinterest.com/looparchitecturalmaterials',\n        ],\n      },\n    ]\n\n    // Blog Post Schema\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': siteMetadata.siteUrl,\n                name: siteMetadata.title,\n              },\n            },\n            {\n              '@type': 'ListItem',\n              position: 2,\n              item: {\n                '@id': `${siteMetadata.siteUrl}/${\n                  this.props.pagePath.split('/')[0]\n                }/`,\n                name: `${this.props.pagePath.split('/')[0]}`,\n              },\n            },\n            {\n              '@type': 'ListItem',\n              position: 3,\n              item: {\n                '@id': pageUrl,\n                name: title,\n              },\n            },\n          ],\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'NewsArticle',\n          mainEntityOfPage: {\n            '@type': 'WebPage',\n            url: pageUrl,\n          },\n          headline: title,\n          image: [image],\n          datePublished: postNode.publishDate,\n          dateModified: dateModified,\n          author: {\n            '@type': 'Person',\n            name: siteMetadata.publisher,\n            url: siteMetadata.siteUrl,\n          },\n          publisher: {\n            '@type': 'Organization',\n            name: siteMetadata.publisher,\n            url: siteMetadata.siteUrl,\n            logo: {\n              '@type': 'ImageObject',\n              name: 'Loop Architectural Materials Logo',\n              width: `600`,\n              height: `60`,\n              url: `${siteMetadata.siteUrl}${siteMetadata.shareImage}`,\n            },\n          },\n          description: postNode.description.childMarkdownRemark.html,\n        }\n      )\n    }\n\n    // Page SEO Schema\n    if (pageSEO) {\n      schemaOrgJSONLD.push({\n        '@context': 'http://schema.org',\n        '@type': 'WebPage',\n        url: pageUrl,\n        name: title,\n        description: description,\n      })\n    }\n\n    if (products) {\n      products.forEach((edge) => {\n        const product = edge.node\n        schemaOrgJSONLD.push({\n          '@context': 'http://schema.org',\n          '@type': 'Product',\n          name: product.title,\n          image: [`https:${product.productImage.file.url}`],\n          description: `${\n            product.description\n              ? product.description.childMarkdownRemark.html\n              : ''\n          } - Inquire for pricing`,\n          sku: `${product.contentful_id}`,\n          mpn: `${product.contentful_id}`,\n          review: {\n            '@type': 'Review',\n            reviewRating: {\n              '@type': 'Rating',\n              ratingValue: '5',\n              bestRating: '5',\n            },\n            author: {\n              '@type': 'Person',\n              name: siteMetadata.publisher,\n              url: siteMetadata.siteUrl,\n            },\n          },\n          aggregateRating: {\n            '@type': 'AggregateRating',\n            ratingValue: '5',\n            reviewCount: '1',\n          },\n          brand: {\n            '@type': 'Brand',\n            name: postNode.title,\n            logo: `https:${postNode.heroImage.fixed.src}`,\n          },\n          offers: {\n            '@type': 'Offer',\n            price: '0.00',\n            priceCurrency: 'USD',\n            priceValidUntil: '2020-01-01',\n            availability: 'InStock',\n            url: `${pageUrl}`,\n          },\n        })\n      })\n    }\n\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"keywords\" content={keywords.join(',')} />\n        <meta name=\"image\" content={image} />\n        <meta name=\"description\" content={description} />\n        <meta name=\"application-name\" content=\"Loop Architectural Materials\" />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        <script\n          async\n          src=\"https://chimpstatic.com/mcjs-connected/js/users/6236ae131b11b8506326eed86/943d564cd0b36996e264a468a.js\"\n        ></script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:title\" content={title} />\n        {postSEO ? (\n          <meta property=\"og:type\" content=\"article\" />\n        ) : (\n          <meta property=\"og:type\" content=\"article\" />\n        )}\n        <meta\n          property=\"article:author\"\n          content=\"Loop Architectural Materials\"\n        />\n        <meta\n          property=\"article:published_time\"\n          content={postNode.publishDate}\n        />\n        <meta property=\"og:url\" content={pageUrl} />\n        <meta property=\"og:image\" content={image} />\n        <meta property=\"og:image:width\" content={imgWidth} />\n        <meta property=\"og:image:height\" content={imgHeight} />\n        <meta property=\"og:description\" content={description} />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={siteMetadata.userTwitter ? siteMetadata.userTwitter : ''}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:image\" content={image} />\n        <meta name=\"twitter:description\" content={description} />\n      </Helmet>\n    )\n  }\n}\n\nexport default SEO\n"],"sourceRoot":""}