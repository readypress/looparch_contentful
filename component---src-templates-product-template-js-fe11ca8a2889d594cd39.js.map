{"version":3,"sources":["webpack:///./src/components/SEOProduct/generateMarkdownProductJSONLD.js","webpack:///./src/templates/product-template.js"],"names":["generateMarkdownProductJSONLD","product","manufacturer","siteMetadata","name","frontmatter","title","image","siteUrl","getSrc","image_primary","childImageSharp","gatsbyImageData","description","unescape","sku","id","mpn","review","reviewRating","ratingValue","bestRating","author","publisher","url","aggregateRating","reviewCount","brand","logo","logoImageDark","offers","price","priceCurrency","priceValidUntil","availability","slug","Template","data","markdownRemark","contentfulManufacturer","site","tagList","tags","map","tag","className","key","jsonLd","type","JSON","stringify","style","marginBottom","marginTop","subtitle","designer","alt","image_secondary","href","target","rel"],"mappings":"8FAAA,sEAIe,SAASA,EACtBC,EACAC,EACAC,GAEA,MAAO,CACL,WAAY,oBACZ,QAAS,UACTC,KAAMH,EAAQI,YAAYC,MAC1BC,MAAO,CAAC,GACHJ,EAAaK,QAAUC,YACxBR,EAAQI,YAAYK,cAAcC,gBAAgBC,kBAGtDC,YAAY,IACVC,SAASb,EAAQI,YAAYQ,cAC7BZ,EAAQI,YAAYH,cACpB,IAEFa,IAAI,GAAId,EAAQe,GAChBC,IAAI,GAAIhB,EAAQe,GAChBE,OAAQ,CACN,QAAS,SACTC,aAAc,CACZ,QAAS,SACTC,YAAa,IACbC,WAAY,KAEdC,OAAQ,CACN,QAAS,SACTlB,KAAMD,EAAaoB,UACnBC,IAAKrB,EAAaK,UAGtBiB,gBAAiB,CACf,QAAS,kBACTL,YAAa,IACbM,YAAa,KAEfC,MAAO,CACL,QAAS,QACTvB,KAAMF,EAAaI,MACnBsB,KAAK,SAAUnB,YAAOP,EAAa2B,cAAcjB,kBAEnDkB,OAAQ,CACN,QAAS,QACTC,MAAO,OACPC,cAAe,MACfC,gBAAiB,aACjBC,aAAc,UACdV,IAAI,GAAIrB,EAAaK,QAAUP,EAAQI,YAAY8B,S,kCCtDzD,yHAQe,SAASC,EAAT,GAEX,IADFC,EACC,EADDA,KAEQC,EAAiDD,EAAjDC,eAAgBC,EAAiCF,EAAjCE,uBAAwBC,EAASH,EAATG,KACxCnC,EAAgBiC,EAAhBjC,YACFH,EAAeqC,EACfE,EAAUpC,EAAYqC,KAAKC,KAAI,SAACC,EAAK5B,GAAN,OACnC,sBAAI6B,UAAU,MAAMC,IAAK9B,GACtB4B,MAICG,EAAS/C,YACbsC,EACApC,EACAsC,EAAKrC,cAGP,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEG,MAAUD,EAAYH,aAAjB,IAAiCG,EAAYC,MAA7C,MAAwDkC,EAAKrC,aAAaG,QAEjF,gBAAC,IAAD,KACE,0BAAQ0C,KAAK,uBAAuBC,KAAKC,UAAUH,KAErD,uBAAKF,UAAU,2BACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,aACb,uBAAKA,UAAU,WACb,sBAAIA,UAAU,kBAAkBM,MAAO,CAAEC,aAAc,IACpD/C,EAAYH,aADf,MACgCG,EAAYC,OAE5C,sBAAIuC,UAAU,wBAAwBM,MAAO,CAAEE,UAAW,IACvDhD,EAAYiD,SACa,SAAzBjD,EAAYkD,UACX,mCAAWlD,EAAYkD,WAI3B,gBAAC,IAAD,CACEhD,MACEF,EAAYK,cAAcC,gBAAgBC,gBAE5C4C,IAAQnD,EAAYC,MAAjB,aAGJD,EAAYoD,iBACX,gBAAC,IAAD,CACElD,MACEF,EAAYoD,gBAAgB9C,gBAAgBC,gBAE9C4C,IAAQnD,EAAYC,MAAjB,aAIsB,SAA5BD,EAAYQ,aACX,yBAAIC,SAASA,SAAST,EAAYQ,gBAGtC,qBAAGgC,UAAU,mBAAmBM,MAAO,CAAEC,aAAc,SACrD,qBACEM,KAAMrD,EAAYqD,KAClBC,OAAO,SACPd,UAAU,oBACVe,IAAI,YAEJ,uCAAevD,EAAYH,gBAG/B,sBAAI2C,UAAU,QAAQJ,S","file":"component---src-templates-product-template-js-fe11ca8a2889d594cd39.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { getSrc } from 'gatsby-plugin-image'\n\nexport default function generateMarkdownProductJSONLD(\n  product,\n  manufacturer,\n  siteMetadata\n) {\n  return {\n    '@context': 'http://schema.org',\n    '@type': 'Product',\n    name: product.frontmatter.title,\n    image: [\n      `${siteMetadata.siteUrl}${getSrc(\n        product.frontmatter.image_primary.childImageSharp.gatsbyImageData\n      )}`,\n    ],\n    description: `${\n      unescape(product.frontmatter.description) ||\n      product.frontmatter.manufacturer ||\n      ''\n    }`,\n    sku: `${product.id}`,\n    mpn: `${product.id}`,\n    review: {\n      '@type': 'Review',\n      reviewRating: {\n        '@type': 'Rating',\n        ratingValue: '5',\n        bestRating: '5',\n      },\n      author: {\n        '@type': 'Person',\n        name: siteMetadata.publisher,\n        url: siteMetadata.siteUrl,\n      },\n    },\n    aggregateRating: {\n      '@type': 'AggregateRating',\n      ratingValue: '5',\n      reviewCount: '1',\n    },\n    brand: {\n      '@type': 'Brand',\n      name: manufacturer.title,\n      logo: `https:${getSrc(manufacturer.logoImageDark.gatsbyImageData)}`,\n    },\n    offers: {\n      '@type': 'Offer',\n      price: '0.00',\n      priceCurrency: 'USD',\n      priceValidUntil: '2020-01-01',\n      availability: 'InStock',\n      url: `${siteMetadata.siteUrl}${product.frontmatter.slug}`,\n    },\n  }\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { Helmet } from 'react-helmet'\n\nimport Layout from '../components/layout'\nimport generateMarkdownProductJSONLD from '../components/SEOProduct/generateMarkdownProductJSONLD'\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark, contentfulManufacturer, site } = data // data.markdownRemark holds your post data\n  const { frontmatter } = markdownRemark\n  const manufacturer = contentfulManufacturer\n  const tagList = frontmatter.tags.map((tag, id) => (\n    <li className=\"tag\" key={id}>\n      {tag}\n    </li>\n  ))\n\n  const jsonLd = generateMarkdownProductJSONLD(\n    markdownRemark,\n    manufacturer,\n    site.siteMetadata\n  )\n\n  return (\n    <Layout>\n      <Helmet\n        title={`${frontmatter.manufacturer} ${frontmatter.title} | ${site.siteMetadata.title}`}\n      />\n      <Helmet>\n        <script type=\"application/ld+json\">{JSON.stringify(jsonLd)}</script>\n      </Helmet>\n      <div className=\"article content-section\">\n        <div className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <h1 className=\"title is-size-1\" style={{ marginBottom: 0 }}>\n                {frontmatter.manufacturer} - {frontmatter.title}\n              </h1>\n              <h2 className=\"has-text-weight-light\" style={{ marginTop: 0 }}>\n                {frontmatter.subtitle}\n                {frontmatter.designer !== 'null' && (\n                  <span> by {frontmatter.designer}</span>\n                )}\n              </h2>\n\n              <GatsbyImage\n                image={\n                  frontmatter.image_primary.childImageSharp.gatsbyImageData\n                }\n                alt={`${frontmatter.title} Image 1`}\n              />\n\n              {frontmatter.image_secondary && (\n                <GatsbyImage\n                  image={\n                    frontmatter.image_secondary.childImageSharp.gatsbyImageData\n                  }\n                  alt={`${frontmatter.title} Image 2`}\n                />\n              )}\n\n              {frontmatter.description !== 'null' && (\n                <p>{unescape(unescape(frontmatter.description))}</p>\n              )}\n            </div>\n            <p className=\"control no-print\" style={{ marginBottom: '1rem' }}>\n              <a\n                href={frontmatter.href}\n                target=\"_blank\"\n                className=\"button is-primary\"\n                rel=\"noopener\"\n              >\n                <span>View on {frontmatter.manufacturer}</span>\n              </a>\n            </p>\n            <ul className=\"tags\">{tagList}</ul>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!, $manufacturer: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      id\n      frontmatter {\n        slug\n        title\n        image_primary {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n        image_secondary {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n        description\n        tags\n        designer\n        manufacturer\n        subtitle\n        href\n      }\n    }\n    contentfulManufacturer(title: { eq: $manufacturer }) {\n      title\n      logoImageDark {\n        gatsbyImageData\n      }\n      heroImage {\n        gatsbyImageData\n      }\n      slug\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        publisher\n      }\n    }\n  }\n`\n"],"sourceRoot":""}